package Inventory_Manager;


import javaasgm.FileHandler;
import javaasgm.Supplier;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author angyi
 */
public class SupplierFrame extends javax.swing.JFrame {
    private final FileHandler supplierFileHandler;
    private List<Supplier> supplierList = new ArrayList<>();

    /**
     * Creates new form SupplierFrame
     */
    public SupplierFrame() {
        initComponents();
        supplierFileHandler = new FileHandler("C:\\Users\\angyi\\Documents\\APU\\SE Y2S1\\OODJ\\POTS Assignment\\SupplierEntry.txt");
    }
    
    public void updateTable(List<Supplier> suppliers) {
        DefaultTableModel model = (DefaultTableModel) tableSupplier.getModel();
        model.setRowCount(0);  // Clear existing rows
        for (Supplier supplier : suppliers) {
            model.addRow(new Object[]{
                supplier.getSupplierId(),
                supplier.getSupplierName(),
                supplier.getEmail(),
                supplier.getPhoneNum(),
                supplier.getAddress()
            });
        }
    }
    
    private void clearFields() {
        txtSupplierID.setText("");
        txtSupplierName.setText("");
        txtEmail.setText("");
        txtPhoneNum.setText("");
        txtAddress.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSupplier = new javax.swing.JLabel();
        javax.swing.JLabel lblSupplierID = new javax.swing.JLabel();
        txtSupplierID = new javax.swing.JTextField();
        javax.swing.JLabel lblSupplierName = new javax.swing.JLabel();
        txtSupplierName = new javax.swing.JTextField();
        javax.swing.JLabel lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        javax.swing.JLabel lblPhoneNUm = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        javax.swing.JLabel lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSupplier = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Supplier");
        setBackground(java.awt.Color.darkGray);
        setMinimumSize(new java.awt.Dimension(777, 467));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblSupplier.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        lblSupplier.setText("SUPPLIER");

        lblSupplierID.setText("SupplierID");

        lblSupplierName.setText("Supplier Name");

        lblEmail.setText("Email");

        lblPhoneNUm.setText("Phone Number");

        lblAddress.setText("Address");

        tableSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SupplierID", "Supplier Name", "Email", "Phone Number", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSupplierMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableSupplier);
        if (tableSupplier.getColumnModel().getColumnCount() > 0) {
            tableSupplier.getColumnModel().getColumn(0).setResizable(false);
            tableSupplier.getColumnModel().getColumn(1).setResizable(false);
            tableSupplier.getColumnModel().getColumn(2).setResizable(false);
            tableSupplier.getColumnModel().getColumn(3).setResizable(false);
            tableSupplier.getColumnModel().getColumn(4).setResizable(false);
        }

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("Search:");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSupplierID, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSupplierID)
                                .addComponent(lblSupplierName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSupplierName)
                                .addComponent(txtEmail)
                                .addComponent(lblPhoneNUm, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                                .addComponent(txtPhoneNum)
                                .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAddress))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addGap(5, 5, 5)
                                .addComponent(btnClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(234, 234, 234)
                        .addComponent(lblSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblSupplier)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDelete)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(lblSupplierID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSupplierID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSupplierName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPhoneNUm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnClear)
                            .addComponent(btnSave)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = tableSupplier.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(this, 
                    "No row is selected! Please select one row",
                    "Select row",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            String supplierId = (String) tableSupplier.getValueAt(row, 0);  // Assuming first column is SupplierID

            // Remove supplier from supplierList
            supplierList.removeIf(supplier -> supplier.getSupplierId().equals(supplierId));

            // Update table and delete record from file
            updateTable(supplierList);
            supplierFileHandler.deleteRecord(supplierId);

            // Show success message
            JOptionPane.showMessageDialog(this, "Supplier deleted successfully!");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tableSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSupplierMouseClicked
        int selectedRow = tableSupplier.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) tableSupplier.getModel();

            // Get data from the selected row
            String supplierId = (String) model.getValueAt(selectedRow, 0);
            String supplierName = (String) model.getValueAt(selectedRow, 1);
            String email = (String) model.getValueAt(selectedRow, 2);
            String phoneNum = (String) model.getValueAt(selectedRow, 3);
            String address = (String) model.getValueAt(selectedRow, 4);

            // Set data in the respective text fields
            txtSupplierID.setText(supplierId);
            txtSupplierName.setText(supplierName);
            txtEmail.setText(email);
            txtPhoneNum.setText(phoneNum);
            txtAddress.setText(address);
            
        }
    }//GEN-LAST:event_tableSupplierMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        supplierList = Supplier.loadSuppliersFromFile(supplierFileHandler);
        updateTable(supplierList);  
    }//GEN-LAST:event_formWindowOpened

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String supplierId = txtSupplierID.getText();
        String supplierName = txtSupplierName.getText();
        String email = txtEmail.getText();
        String phoneNum = txtPhoneNum.getText();
        String address = txtAddress.getText();

        // Check if all fields are filled
        if (supplierId.isEmpty() || supplierName.isEmpty() || email.isEmpty() || phoneNum.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        for (Supplier supplier : supplierList) {
            if (supplier.getSupplierId().equals(supplierId)) {
                JOptionPane.showMessageDialog(this, "A supplier with this ID already exists.", "Duplicate ID Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        // Format the supplier information for file storage
        String supplierRecord = supplierId + "," + supplierName + "," + email + "," + phoneNum + "," + address;

        // Add the supplier record to the file
        supplierFileHandler.addRecord(supplierRecord);

        // Add the new supplier to the supplier list
        Supplier supplier = new Supplier(supplierId, supplierName, email, phoneNum, address);
        supplierList.add(supplier);

        // Update the table with the new supplier
        updateTable(supplierList);

        // Display success message and clear input fields
        JOptionPane.showMessageDialog(this, "Supplier added successfully!");
        clearFields();

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableSupplier.getSelectedRow();
        if (selectedRow != -1) {
            String originalSupplierId = (String) tableSupplier.getValueAt(selectedRow, 0);  // Get original supplierId from table
            String newSupplierId = txtSupplierID.getText();

            // Check if the user tries to change the supplierId
            if (!originalSupplierId.equals(newSupplierId)) {
                JOptionPane.showMessageDialog(this, "Supplier ID is not allowed to be updated!", "Update Error", JOptionPane.ERROR_MESSAGE);
                return; // Stop the update process
            } 

            String supplierName = txtSupplierName.getText();
            String email = txtEmail.getText();
            String phoneNum = txtPhoneNum.getText();
            String address = txtAddress.getText();

            // Validate input fields
            if (supplierName.isEmpty() || email.isEmpty() || phoneNum.isEmpty() || address.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields!", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Update the supplier in supplierList
            Supplier supplier = supplierList.get(selectedRow);
            supplier.setSupplierName(supplierName);
            supplier.setEmail(email);
            supplier.setPhoneNum(phoneNum);
            supplier.setAddress(address);

            // Update table view
            DefaultTableModel model = (DefaultTableModel) tableSupplier.getModel();
            model.setValueAt(supplierName, selectedRow, 1);
            model.setValueAt(email, selectedRow, 2);
            model.setValueAt(phoneNum, selectedRow, 3);
            model.setValueAt(address, selectedRow, 4);

            // Prepare updated record string for the file
            String updatedRecord = supplier.toString();

            // Update the file using FileHandler
            supplierFileHandler.updateRecord(originalSupplierId, updatedRecord);

            JOptionPane.showMessageDialog(this, "Supplier updated successfully!");
        } else {
            JOptionPane.showMessageDialog(this, "No supplier selected to update!", "Update Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
       
        DefaultTableModel obj = (DefaultTableModel) tableSupplier.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<> (obj);
        tableSupplier.setRowSorter(obj1);
        
        String searchText = txtSearch.getText();
        obj1.setRowFilter(RowFilter.regexFilter("(?i)" + searchText));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        InventoryFrame inventoryFrame = new InventoryFrame();
        inventoryFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplierFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JTable tableSupplier;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSupplierID;
    private javax.swing.JTextField txtSupplierName;
    // End of variables declaration//GEN-END:variables
}
